{"ast":null,"code":"var _jsxFileName = \"/home/mitchu/Projects/player-music/src/components/MusicPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { TextField, Button, Box, Typography, Card, CardContent, CardActions } from \"@mui/material\";\nimport { getToken } from \"./spotifyAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = () => {\n  _s();\n  const [tracks, setTracks] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  // Fetch the Spotify access token when the component mounts\n  React.useEffect(() => {\n    const fetchToken = async () => {\n      const token = await getToken();\n      setToken(token);\n    };\n    fetchToken();\n  }, []);\n  const searchTracks = async () => {\n    try {\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchQuery}&type=track`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setTracks(data.tracks.items);\n      setError(null);\n    } catch (error) {\n      setError(\"Failed to fetch tracks. Please try again later.\");\n      console.error(\"Fetch error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Spotify Music Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Search for a track\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        mt: 2\n      },\n      onClick: searchTracks,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"error\",\n      sx: {\n        mt: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 2,\n        mt: 4\n      },\n      children: tracks.length > 0 && tracks.map(track => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 600,\n          mx: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: track.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"textSecondary\",\n            children: track.artists.map(artist => artist.name).join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            color: \"primary\",\n            onClick: () => window.open(track.external_urls.spotify, \"_blank\"),\n            children: \"Play on Spotify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicPlayer, \"OqUgse3dhKzk+KdX8Gr3uyo3He4=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","TextField","Button","Box","Typography","Card","CardContent","CardActions","getToken","jsxDEV","_jsxDEV","MusicPlayer","_s","tracks","setTracks","searchQuery","setSearchQuery","token","setToken","error","setError","useEffect","fetchToken","searchTracks","response","fetch","headers","Authorization","ok","Error","data","json","items","console","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","e","target","color","mt","onClick","display","flexDirection","gap","length","map","track","maxWidth","mx","name","artists","artist","join","size","window","open","external_urls","spotify","id","_c","$RefreshReg$"],"sources":["/home/mitchu/Projects/player-music/src/components/MusicPlayer.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  TextField,\n  Button,\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  CardActions,\n} from \"@mui/material\";\nimport { getToken } from \"./spotifyAuth\";\n\nconst MusicPlayer = () => {\n  const [tracks, setTracks] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  // Fetch the Spotify access token when the component mounts\n  React.useEffect(() => {\n    const fetchToken = async () => {\n      const token = await getToken();\n      setToken(token);\n    };\n    fetchToken();\n  }, []);\n\n  const searchTracks = async () => {\n    try {\n      const response = await fetch(\n        `https://api.spotify.com/v1/search?q=${searchQuery}&type=track`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n      setTracks(data.tracks.items);\n      setError(null);\n    } catch (error) {\n      setError(\"Failed to fetch tracks. Please try again later.\");\n      console.error(\"Fetch error:\", error);\n    }\n  };\n\n  return (\n    <Box sx={{ p: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Spotify Music Player\n      </Typography>\n\n      <TextField\n        label=\"Search for a track\"\n        variant=\"outlined\"\n        fullWidth\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n      />\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        sx={{ mt: 2 }}\n        onClick={searchTracks}\n      >\n        Search\n      </Button>\n\n      {error && (\n        <Typography variant=\"body1\" color=\"error\" sx={{ mt: 2 }}>\n          {error}\n        </Typography>\n      )}\n\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 2, mt: 4 }}>\n        {tracks.length > 0 &&\n          tracks.map((track) => (\n            <Card key={track.id} sx={{ maxWidth: 600, mx: \"auto\" }}>\n              <CardContent>\n                <Typography variant=\"h6\">{track.name}</Typography>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                  {track.artists.map((artist) => artist.name).join(\", \")}\n                </Typography>\n              </CardContent>\n              <CardActions>\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={() =>\n                    window.open(track.external_urls.spotify, \"_blank\")\n                  }\n                >\n                  Play on Spotify\n                </Button>\n              </CardActions>\n            </Card>\n          ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MusicPlayer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,SAAS,EACTC,MAAM,EACNC,GAAG,EACHC,UAAU,EACVC,IAAI,EACJC,WAAW,EACXC,WAAW,QACN,eAAe;AACtB,SAASC,QAAQ,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAD,KAAK,CAACsB,SAAS,CAAC,MAAM;IACpB,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAML,KAAK,GAAG,MAAMT,QAAQ,CAAC,CAAC;MAC9BU,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC;IACDK,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uCAAuCV,WAAW,aAAa,EAC/D;QACEW,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUV,KAAK;QAChC;MACF,CACF,CAAC;MAED,IAAI,CAACO,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCjB,SAAS,CAACgB,IAAI,CAACjB,MAAM,CAACmB,KAAK,CAAC;MAC5BZ,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdC,QAAQ,CAAC,iDAAiD,CAAC;MAC3Da,OAAO,CAACd,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;EAED,oBACET,OAAA,CAACP,GAAG;IAAC+B,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAChB1B,OAAA,CAACN,UAAU;MAACiC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbhC,OAAA,CAACT,SAAS;MACR0C,KAAK,EAAC,oBAAoB;MAC1BN,OAAO,EAAC,UAAU;MAClBO,SAAS;MACTC,KAAK,EAAE9B,WAAY;MACnB+B,QAAQ,EAAGC,CAAC,IAAK/B,cAAc,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eAEFhC,OAAA,CAACR,MAAM;MACLmC,OAAO,EAAC,WAAW;MACnBY,KAAK,EAAC,SAAS;MACff,EAAE,EAAE;QAAEgB,EAAE,EAAE;MAAE,CAAE;MACdC,OAAO,EAAE5B,YAAa;MAAAa,QAAA,EACvB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERvB,KAAK,iBACJT,OAAA,CAACN,UAAU;MAACiC,OAAO,EAAC,OAAO;MAACY,KAAK,EAAC,OAAO;MAACf,EAAE,EAAE;QAAEgB,EAAE,EAAE;MAAE,CAAE;MAAAd,QAAA,EACrDjB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CACb,eAEDhC,OAAA,CAACP,GAAG;MAAC+B,EAAE,EAAE;QAAEkB,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAEC,GAAG,EAAE,CAAC;QAAEJ,EAAE,EAAE;MAAE,CAAE;MAAAd,QAAA,EAClEvB,MAAM,CAAC0C,MAAM,GAAG,CAAC,IAChB1C,MAAM,CAAC2C,GAAG,CAAEC,KAAK,iBACf/C,OAAA,CAACL,IAAI;QAAgB6B,EAAE,EAAE;UAAEwB,QAAQ,EAAE,GAAG;UAAEC,EAAE,EAAE;QAAO,CAAE;QAAAvB,QAAA,gBACrD1B,OAAA,CAACJ,WAAW;UAAA8B,QAAA,gBACV1B,OAAA,CAACN,UAAU;YAACiC,OAAO,EAAC,IAAI;YAAAD,QAAA,EAAEqB,KAAK,CAACG;UAAI;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eAClDhC,OAAA,CAACN,UAAU;YAACiC,OAAO,EAAC,WAAW;YAACY,KAAK,EAAC,eAAe;YAAAb,QAAA,EAClDqB,KAAK,CAACI,OAAO,CAACL,GAAG,CAAEM,MAAM,IAAKA,MAAM,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,IAAI;UAAC;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACdhC,OAAA,CAACH,WAAW;UAAA6B,QAAA,eACV1B,OAAA,CAACR,MAAM;YACL8D,IAAI,EAAC,OAAO;YACZf,KAAK,EAAC,SAAS;YACfE,OAAO,EAAEA,CAAA,KACPc,MAAM,CAACC,IAAI,CAACT,KAAK,CAACU,aAAa,CAACC,OAAO,EAAE,QAAQ,CAClD;YAAAhC,QAAA,EACF;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA,GAjBLe,KAAK,CAACY,EAAE;QAAA9B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBb,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA9FID,WAAW;AAAA2D,EAAA,GAAX3D,WAAW;AAgGjB,eAAeA,WAAW;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}